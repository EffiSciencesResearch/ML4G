from io import StringIO

import pandas
import matplotlib.pyplot as plt

vals = [
    (0.01, {
        'atomic':
        """
size,time
64,1.17882e-05
128,1.14991e-05
256,1.11862e-05
512,1.19923e-05
1024,1.12051e-05
2048,1.11567e-05
4096,1.1696e-05
8192,1.12232e-05
16384,1.16553e-05
32768,1.14504e-05
65536,1.22999e-05
131072,1.39732e-05
262144,1.72621e-05
524288,2.31633e-05
1048576,3.65867e-05
2097152,7.02402e-05
4194304,0.00012269
8388608,0.000228547
16777216,0.000469618
33554432,0.000881699
""",
        'thrust':
        """
size,time
64,1.79119e-05
128,1.75994e-05
256,1.74717e-05
512,1.72563e-05
1024,2.24441e-05
2048,1.85448e-05
4096,2.51121e-05
8192,1.98365e-05
16384,1.85201e-05
32768,1.9024e-05
65536,2.02716e-05
131072,2.39452e-05
262144,3.30436e-05
524288,2.8757e-05
1048576,4.13634e-05
2097152,6.05537e-05
4194304,9.93346e-05
8388608,0.000184501
16777216,0.000329807
33554432,0.00063765
""",
        'cpu':
        """
size,time
64,3.3696e-07
128,8.1003e-07
256,1.43037e-06
512,2.85516e-06
1024,5.35306e-06
2048,1.02954e-05
4096,2.01783e-05
8192,4.18886e-05
16384,9.11094e-05
32768,0.000203028
65536,0.000378267
131072,0.00068692
262144,0.00152042
524288,0.00293757
""",
    }),
    (0.05, {
        'atomic':
        """
size,time
64,1.24618e-05
128,1.14431e-05
256,1.16267e-05
512,1.20718e-05
1024,1.30882e-05
2048,1.31544e-05
4096,1.19255e-05
8192,1.18478e-05
16384,1.37331e-05
32768,1.46075e-05
65536,1.48384e-05
131072,1.49205e-05
262144,1.83254e-05
524288,2.55947e-05
1048576,4.30248e-05
2097152,7.34409e-05
4194304,0.000140772
8388608,0.000257899
16777216,0.000508699
33554432,0.000995209
""",
        'thrust':
        """
size,time
64,1.96678e-05
128,1.73097e-05
256,1.89262e-05
512,1.88038e-05
1024,1.73747e-05
2048,1.86058e-05
4096,1.78725e-05
8192,1.8769e-05
16384,2.1044e-05
32768,1.97152e-05
65536,2.04348e-05
131072,2.11883e-05
262144,3.35971e-05
524288,2.89045e-05
1048576,4.2425e-05
2097152,6.12192e-05
4194304,0.000101566
8388608,0.000179138
16777216,0.000335111
33554432,0.000649474
""",
        'cpu':
        """
size,time
64,3.5717e-07
128,6.8275e-07
256,1.34144e-06
512,2.65163e-06
1024,5.32359e-06
2048,1.13573e-05
4096,2.09725e-05
8192,4.21784e-05
16384,9.13578e-05
32768,0.000186677
65536,0.000376922
131072,0.000680926
262144,0.00142909
524288,0.00296041
""",
    }),
    (0.2, {
        'atomic':
        """
size,time
64,1.1713e-05
128,1.13511e-05
256,1.49288e-05
512,1.1595e-05
1024,1.12988e-05
2048,1.17413e-05
4096,1.13134e-05
8192,1.14134e-05
16384,1.17549e-05
32768,1.21306e-05
65536,1.38734e-05
131072,1.53976e-05
262144,1.98645e-05
524288,3.20545e-05
1048576,4.76626e-05
2097152,8.37712e-05
4194304,0.000154056
8388608,0.000295996
16777216,0.000579441
33554432,0.00114725
""",
        'thrust':
        """
size,time
64,1.74751e-05
128,1.69554e-05
256,1.70354e-05
512,1.69337e-05
1024,1.69349e-05
2048,1.85183e-05
4096,1.72279e-05
8192,1.78779e-05
16384,1.83674e-05
32768,2.01079e-05
65536,2.15299e-05
131072,2.83271e-05
262144,2.29848e-05
524288,2.88422e-05
1048576,4.36031e-05
2097152,6.43659e-05
4194304,0.000105876
8388608,0.00019017
16777216,0.000358884
33554432,0.000696832
""",
        'cpu':
        """
size,time
64,3.3625e-07
128,8.5568e-07
256,1.68103e-06
512,3.43621e-06
1024,6.87642e-06
2048,1.35261e-05
4096,2.7069e-05
8192,5.46474e-05
16384,0.000139185
32768,0.000473135
65536,0.00046401
131072,0.000907617
262144,0.0018129
524288,0.00424339
""",
    }),
    (0.5, {
        'atomic':
        """
size,time
64,1.13292e-05
128,1.1094e-05
256,1.12523e-05
512,1.12282e-05
1024,1.12729e-05
2048,1.12857e-05
4096,1.12646e-05
8192,1.1465e-05
16384,1.21408e-05
32768,1.20074e-05
65536,1.39206e-05
131072,1.54984e-05
262144,1.98368e-05
524288,2.90306e-05
1048576,4.89e-05
2097152,8.59339e-05
4194304,0.000159435
8388608,0.000306952
16777216,0.000602126
33554432,0.00119276
""",
        'thrust':
        """
size,time
64,1.74869e-05
128,1.67018e-05
256,1.69743e-05
512,1.73586e-05
1024,1.69791e-05
2048,1.8159e-05
4096,1.73039e-05
8192,1.78426e-05
16384,1.76378e-05
32768,1.94722e-05
65536,2.01999e-05
131072,2.14463e-05
262144,2.31985e-05
524288,2.98763e-05
1048576,4.47898e-05
2097152,7.45424e-05
4194304,0.000115555
8388608,0.000213321
16777216,0.000400081
33554432,0.000776523
""",
        'cpu':
        """
size,time
64,3.2234e-07
128,8.974e-07
256,1.75375e-06
512,3.84021e-06
1024,8.02819e-06
2048,1.6698e-05
4096,3.51531e-05
8192,7.17155e-05
16384,0.000144289
32768,0.00029485
65536,0.000590385
131072,0.00117787
262144,0.00232917
524288,0.00469393
""",
    }),
    (0.9, {
        'atomic':
        """
size,time
64,1.11549e-05
128,1.11409e-05
256,1.11432e-05
512,1.11324e-05
1024,1.12054e-05
2048,1.11259e-05
4096,1.11723e-05
8192,1.13062e-05
16384,1.16481e-05
32768,1.21642e-05
65536,1.33537e-05
131072,1.57644e-05
262144,2.05018e-05
524288,3.00478e-05
1048576,5.08874e-05
2097152,9.01463e-05
4194304,0.000168412
8388608,0.000325311
16777216,0.000637485
33554432,0.00126182
""",
        'thrust':
        """
size,time
64,1.75465e-05
128,1.70128e-05
256,1.77526e-05
512,1.71029e-05
1024,1.78064e-05
2048,1.8449e-05
4096,1.80489e-05
8192,1.75238e-05
16384,1.78337e-05
32768,1.95304e-05
65536,2.05535e-05
131072,2.16919e-05
262144,2.69001e-05
524288,3.14609e-05
1048576,4.93654e-05
2097152,7.71139e-05
4194304,0.000128903
8388608,0.000238217
16777216,0.000456511
33554432,0.000888024
""",
        'cpu':
        """
size,time
64,3.3498e-07
128,1.03407e-06
256,1.71877e-06
512,3.09981e-06
1024,5.80844e-06
2048,1.11674e-05
4096,2.21573e-05
8192,4.46191e-05
16384,9.00856e-05
32768,0.000188644
65536,0.000368843
131072,0.000724267
262144,0.00146446
524288,0.00295835
""",
    }),
]


def main():
    end = 1000

    allowed_threshs = None
    allowed_names = None

    for thresh, items in vals:
        if allowed_threshs is not None and thresh not in allowed_threshs:
            continue
        for name, string in items.items():
            if allowed_names is not None and name not in allowed_names:
                continue
            df = pandas.read_csv(StringIO(string))
            plt.plot(df['size'][:end],
                     df['size'][:end] / df['time'][:end],
                     label=f'{name} {thresh}')

    plt.ylabel("floats/sec")
    plt.legend()
    plt.show()


if __name__ == "__main__":
    main()
